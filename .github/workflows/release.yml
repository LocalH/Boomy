name: Build and Upload All Platforms

on:
    workflow_dispatch:
    push:
        tags:
            - 'v*'

jobs:
    build-windows:
        runs-on: windows-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: '8.0.x'

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'npm'
                  cache-dependency-path: 'BoomyEditor/package-lock.json'

            - name: Restore .NET dependencies
              run: dotnet restore Boomy.sln

            - name: Build .NET solution
              run: dotnet build Boomy.sln -c Release --no-restore

            - name: Publish BoomyBuilder and BoomyExporter (win-x64)
              run: dotnet publish Boomy.sln -c Release -r win-x64 --self-contained

            - name: Install Node.js dependencies
              working-directory: BoomyEditor
              run: npm ci

            - name: Build Electron app
              working-directory: BoomyEditor
              run: npm run make

            - name: Upload Electron build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: boomy-win32-x64
                  path: |
                      BoomyEditor/out/make/**/*.exe

            - name: Zip BoomyExporter output
              run: |
                  Compress-Archive -Path BoomyExporter/bin/Release/net8.0/win-x64/publish/* -DestinationPath BoomyExporter/bin/Release/net8.0/win-x64/publish/boomyexporter-win-x64.zip

            - name: Upload BoomyExporter artifact
              uses: actions/upload-artifact@v4
              with:
                  name: boomyexporter-win-x64
                  path: |
                      BoomyExporter/bin/Release/net8.0/win-x64/publish/boomyexporter-win-x64.zip
    build-linux:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: '8.0.x'

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'npm'
                  cache-dependency-path: 'BoomyEditor/package-lock.json'

            - name: Restore .NET dependencies
              run: dotnet restore Boomy.sln

            - name: Build .NET solution
              run: dotnet build Boomy.sln -c Release --no-restore

            - name: Publish BoomyBuilder and BoomyExporter (linux-x64)
              run: dotnet publish Boomy.sln -c Release -r linux-x64 --self-contained

            - name: Install Node.js dependencies
              working-directory: BoomyEditor
              run: npm ci

            - name: Build Electron app
              working-directory: BoomyEditor
              run: npm run make

            - name: Upload Electron build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: boomy-linux-x64
                  path: |
                      BoomyEditor/out/make/**/*.deb
                      BoomyEditor/out/make/**/*.rpm

            - name: Zip BoomyExporter output
              run: |
                  zip -r BoomyExporter/bin/Release/net8.0/linux-x64/publish/boomyexporter-linux-x64.zip BoomyExporter/bin/Release/net8.0/linux-x64/publish/*

            - name: Upload BoomyExporter artifact
              uses: actions/upload-artifact@v4
              with:
                  name: boomyexporter-linux-x64
                  path: |
                      BoomyExporter/bin/Release/net8.0/linux-x64/publish/boomyexporter-linux-x64.zip
    build-macos:
        runs-on: macos-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup .NET
              uses: actions/setup-dotnet@v4
              with:
                  dotnet-version: '8.0.x'

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '20'
                  cache: 'npm'
                  cache-dependency-path: 'BoomyEditor/package-lock.json'

            - name: Restore .NET dependencies
              run: dotnet restore Boomy.sln

            - name: Build .NET solution
              run: dotnet build Boomy.sln -c Release --no-restore

            - name: Publish BoomyBuilder and BoomyExporter (osx-x64)
              run: dotnet publish Boomy.sln -c Release -r osx-x64 --self-contained

            - name: Install Node.js dependencies
              working-directory: BoomyEditor
              run: npm ci

            - name: Build Electron app
              working-directory: BoomyEditor
              run: npm run make

            - name: Upload Electron build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: boomy-darwin-x64
                  path: |
                      BoomyEditor/out/make/**/*.zip

            - name: Zip BoomyExporter output
              run: |
                  zip -r BoomyExporter/bin/Release/net8.0/osx-x64/publish/boomyexporter-osx-x64.zip BoomyExporter/bin/Release/net8.0/osx-x64/publish/*

            - name: Upload BoomyExporter artifact
              uses: actions/upload-artifact@v4
              with:
                  name: boomyexporter-osx-x64
                  path: |
                      BoomyExporter/bin/Release/net8.0/osx-x64/publish/boomyexporter-osx-x64.zip
    release:
        needs: [build-windows, build-linux, build-macos]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Download all artifacts
              uses: actions/download-artifact@v4
              with:
                  path: ./artifacts

            - name: Extract version from tag
              id: version
              shell: bash
              run: |
                  tag="${{ github.ref }}"
                  version=${tag#refs/tags/v}
                  echo "version=$version" >> $GITHUB_OUTPUT

            - name: Create GitHub Release
              uses: softprops/action-gh-release@v1
              with:
                  generate_release_notes: true
                  files: |
                      ./artifacts/**/*.zip
                      ./artifacts/**/*.deb
                      ./artifacts/**/*.rpm
                      ./artifacts/**/*.exe
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
